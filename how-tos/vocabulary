Primary business driver for breaking apps into smaller parts is time-to-market

Key business architectural characteristics: time-to-market, agility, fault tolerance, scalability, deployability, testability, maintainability

Component-based decomposition - migration to microservices

COTS - commercial off the shelf, software bought and used "as is"

ACID - Atomicity, Consistency, Isolation, and Durability.
Atomicity - each statement in transaction, read, write, update, delete is treated as a single unit. Either the entire
statement is executed, or none of it is executed. Prevents data loss nad corruption

Consistency - ensures that transactions only make changes to tables in predefined, predictable ways.
Transactional consistency ensures that corruption or errors in your data do not create unintended consequences
for the integrity of your table.

Isolation - when multiple users are reading and writing from the same table all at once, isolation of their transactions
ensures that the concurrent transactions don't interfere with or affect one another. Each request can occur as though
they were occurring one by one, even though they're actually occurring simultaneously.

Durability - ensures that changes to your data made by successfully executed transactions will be saved, even in the
event of system failure.

All of the above are a given in RDBMS
ACID transactions ensure the highest possible data reliability and integrity.

Modularity - breaking up systems into different parts

Granularity - deals with the size of those separate parts

SAQ - Self-assesment qustionnaire

PA-DSS - Payment Application Data Security Standard maintained by the PCI Security Standards Council (SSC) to address
the critical issue of payment application security